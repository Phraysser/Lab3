#include <iostream>
#include <sstream>
#include <string>

using namespace std;

class Rectangle {
private:
    int x1, y1, x2, y2; // Координаты изображения прямоугольника

public:
    // Конструктор по умолчанию
    Rectangle() : x1(0), y1(0), x2(0), y2(0) {}

    // Конструктор перезагрузки с параметрами
    Rectangle(int x1, int y1, int x2, int y2) : x1(x1), y1(y1), x2(x2), y2(y2) {}

    // Деструктор для освобождения памяти
    ~Rectangle() {
        cout << "Объект с координатами (" << x1 << ", " << y1 << ", " << x2 << ", " << y2 << ") уничтожен" << endl;
    }

    // Функция-метод 1 обработки данных: определение, является ли прямоугольник квадратом
    bool isSquare() {
        return (x2 - x1) == (y2 - y1);
    }

    // Функция-метод 2 обработки данных: изображение прямоугольника на форме
    void drawRectangle() {
        cout << "Прямоугольник с координатами (" << x1 << ", " << y1 << "), (" << x2 << ", " << y2 << ") изображен на форме" << endl;
    }

    // Функция формирования строки информации об объекте
    string getInfo() {
        ostringstream oss;
        oss << "Координаты прямоугольника: (" << x1 << ", " << y1 << "), (" << x2 << ", " << y2 << ")";
        return oss.str();
    }
};

int main() {
    setlocale(LC_ALL, "Russian");
    Rectangle defaultRect; // Создание объекта с помощью конструктора по умолчанию
    Rectangle userRect(1, 1, 3, 3); // Создание объекта с помощью конструктора перезагрузки

    // Вывод информации о прямоугольниках
    cout << "Информация о прямоугольнике по умолчанию: " << defaultRect.getInfo() << endl;
    cout << "Информация о пользовательском прямоугольнике: " << userRect.getInfo() << endl;

    // Проверка, являются ли прямоугольники квадратами
    cout << "Прямоугольник по умолчанию является квадратом? " << (defaultRect.isSquare() ? "Да" : "Нет") << endl;
    cout << "Пользовательский прямоугольник является квадратом? " << (userRect.isSquare() ? "Да" : "Нет") << endl;

    // Изображение прямоугольников
    defaultRect.drawRectangle();
    userRect.drawRectangle();

    return 0;
}